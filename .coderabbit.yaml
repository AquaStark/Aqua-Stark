# CodeRabbit Configuration for Aqua-Stark Project
# This file configures how CodeRabbit analyzes and reviews your code

# Global settings
global:
  # Enable/disable CodeRabbit for this repository
  enabled: true
  
  # Set the default language for reviews
  language: "en"
  
  # Configure review behavior
  review:
    # Enable automatic reviews on pull requests
    auto_review: true
    
    # Enable inline comments
    inline_comments: true
    
    # Enable summary comments
    summary_comments: true
    
    # Set review depth to deep for comprehensive analysis
    depth: "deep"
    
    # Enable issue compliance checking
    issue_compliance: true
    
    # Enable architecture validation
    architecture_validation: true

# File patterns to include/exclude
files:
  # Include patterns
  include:
    - "client/src/**/*.{ts,tsx,js,jsx}"
    - "aqua_contract/src/**/*.cairo"
    - "contract/src/**/*.cairo"
    - "*.{json,md,yaml,yml}"
    - "*.{css,scss}"
    - "*.{toml}"
    - "client/tailwind.config.js"
    - "client/vite.config.ts"
    - "client/tsconfig*.json"
    - "client/eslint.config.js"
  
  # Exclude patterns
  exclude:
    - "node_modules/**"
    - "client/dist/**"
    - "client/build/**"
    - "client/.next/**"
    - "coverage/**"
    - "*.min.js"
    - "*.bundle.js"
    - "client/package-lock.json"
    - "client/yarn.lock"
    - "client/pnpm-lock.yaml"
    - ".git/**"
    - "*.log"
    - "*.lock"
    - "client/tsconfig.app.tsbuildinfo"
    - "client/tsconfig.node.tsbuildinfo"
    - "aqua_contract/target/**"
    - "contract/target/**"
    - "aqua_contract/Scarb.lock"
    - "contract/Scarb.lock"

# Language-specific configurations
languages:
  typescript:
    # TypeScript/JavaScript specific settings
    enabled: true
    # Include type checking in reviews
    type_check: true
    # Check for common TypeScript issues
    lint_checks: true
    # Check for React/Next.js specific patterns
    react_patterns: true
    # Check for proper imports using @/
    import_validation: true
    # Check for Vite-specific patterns
    vite_patterns: true
    # Check for Tailwind CSS usage
    tailwind_patterns: true
    
  cairo:
    # Cairo specific settings for smart contracts
    enabled: true
    # Check for common Cairo issues
    lint_checks: true
    # Include Scarb check in reviews
    scarb_check: true
    # Security analysis for smart contracts
    security_analysis: true
    # Check for Dojo framework patterns
    dojo_patterns: true
    # Check for Starknet specific patterns
    starknet_patterns: true

# Security settings
security:
  # Enable security scanning
  enabled: true
  
  # Check for common vulnerabilities
  vulnerability_scan: true
  
  # Check for secrets in code
  secret_scan: true
  
  # Check for dependency vulnerabilities
  dependency_scan: true
  
  # Smart contract security
  smart_contract_security: true
  # Check for reentrancy attacks
  reentrancy_check: true
  # Check for overflow/underflow
  overflow_check: true
  # Check for access control
  access_control_check: true

# Performance settings
performance:
  # Enable performance analysis
  enabled: true
  
  # Check for performance issues
  performance_scan: true
  
  # Check for memory leaks
  memory_leak_scan: true
  
  # Check for React performance issues
  react_performance: true
  # Check for unnecessary re-renders
  unnecessary_rerenders: true
  # Check for large bundle sizes
  bundle_size_check: true

# Code quality settings
quality:
  # Enable code quality checks
  enabled: true
  
  # Check for code smells
  code_smells: true
  
  # Check for maintainability issues
  maintainability: true
  
  # Check for readability issues
  readability: true
  
  # Check for complexity issues
  complexity: true

# Custom rules and preferences
rules:
  # Enforce consistent naming conventions
  naming_conventions: true
  # Kebab-case for files, PascalCase for components, camelCase for variables
  file_naming: "kebab-case"
  component_naming: "PascalCase"
  variable_naming: "camelCase"
  constant_naming: "UPPER_SNAKE_CASE"
  # Cairo naming conventions
  cairo_naming: "snake_case"
  
  # Check for proper error handling
  error_handling: true
  
  # Check for proper documentation (disabled as per requirements)
  documentation: false
  
  # Check for test coverage
  test_coverage: true
  
  # Check for accessibility issues
  accessibility: true
  
  # Architecture validation
  single_responsibility: true
  component_size_limit: 200  # Maximum lines per component
  page_orchestration: true   # Pages should orchestrate, not implement complex logic
  
  # Import validation
  absolute_imports: true     # Prefer @/ over relative paths
  import_grouping: true      # Group imports: libraries → internals → relatives
  
  # Code quality
  duplicate_code_detection: true
  cyclomatic_complexity: true
  function_length_limit: 50  # Maximum lines per function
  
  # Issue compliance
  issue_requirement_check: true
  change_traceability: true
  
  # React specific rules
  react_hooks_rules: true
  react_prop_types: true
  react_key_prop: true
  
  # Smart contract specific rules
  cairo_best_practices: true
  dojo_patterns: true
  starknet_patterns: true

# Project-specific settings
project:
  # Project type
  type: "blockchain_game"
  
  # Framework detection
  frameworks:
    - "react"
    - "typescript"
    - "vite"
    - "tailwindcss"
    - "cairo"
    - "dojo"
    - "starknet"
    - "cartridge"
  
  # Database type
  database: "blockchain"
  
  # Blockchain integration
  blockchain: "starknet"
  
  # Smart contracts
  smart_contracts: true
  
  # Game development
  game_development: true
  
  # Web3 integration
  web3_integration: true

# Review templates
templates:
  # Custom review messages
  messages:
    security: "🔒 Security review completed"
    performance: "⚡ Performance review completed"
    quality: "✨ Code quality review completed"
    accessibility: "♿ Accessibility review completed"
    architecture: "🏗️ Architecture validation completed"
    issue_compliance: "✅ Issue compliance check completed"
    naming: "📝 Naming conventions check completed"
    imports: "📦 Import structure validation completed"
    smart_contract: "🔗 Smart contract review completed"
    game_logic: "🎮 Game logic validation completed"
    web3_integration: "🌐 Web3 integration review completed"
  
  # Priority-based review messages
  priorities:
    high: "🚨 HIGH PRIORITY ISSUE"
    medium: "⚠️ MEDIUM PRIORITY ISSUE"
    low: "ℹ️ LOW PRIORITY ISSUE"
  
  # Architecture-specific messages
  architecture:
    single_responsibility: "🔧 Component has multiple responsibilities - consider splitting"
    large_component: "📏 Component exceeds size limit - consider refactoring"
    page_logic: "🎭 Page contains complex logic - move to components/hooks"
    relative_imports: "🔄 Use @/ imports instead of relative paths"
    smart_contract_security: "🛡️ Smart contract security issue detected"
    game_balance: "⚖️ Game balance issue detected"
    web3_best_practices: "🌐 Web3 best practices violation" 